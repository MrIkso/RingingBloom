using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Text;

namespace RingingBloom.Common
{
    public class Wem
    {
        public string Name { get; set; }
        public ulong Id { get; set; }
        public uint BlockSize { get; set; }
        public uint Length { get; set; }
        public uint Offset { get; set; }
        public uint LanguageEnum { get; set; }

        public byte[] file;
        public bool nameChanged = false;


        public Wem(string aName, string aId, BinaryReader aFile)
        {
            Name = Path.GetFileName(aName);
            Id = Convert.ToUInt32(aId);
            Length = (uint)aFile.BaseStream.Length;
            file = aFile.ReadBytes((int)Length);
            LanguageEnum = 0;
            aFile.Close();
        }

        public Wem(string aName, ulong aID, byte[] aBinary)
        {
            Name = aName;
            Id = aID;
            Length = (uint)aBinary.Length;
            file = aBinary;
            LanguageEnum = 0;
        }

        public Wem(string aName, ulong aID, byte[] aBinary, uint lanEnum)
        {
            //the boolean only exists on pck, not bnk thus only needs to be generated by pck
            Name = aName;
            Id = aID;
            Length = (uint)aBinary.Length;
            file = aBinary;
            LanguageEnum = lanEnum;
        }

        public Wem(string aName, ulong aID, uint blockSize, uint fileSize, uint startingBlock, uint lanEnum)
        {
            //the boolean only exists on pck, not bnk thus only needs to be generated by pck
            Name = aName;
            Id = aID;
            BlockSize = blockSize;
            Length = fileSize;
            Offset = startingBlock;
            LanguageEnum = lanEnum;
        }
    }
}
